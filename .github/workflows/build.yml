name: SonarCloud Build
on:
  push:
    branches:
      - develop
      - test
      - main
      - feature/*
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore Dependencies
        run: dotnet restore Metrics.sln
      - name: Build
        run: dotnet build Metrics.sln --configuration Release --no-restore
      - name: Test
        working-directory: ./Metrics.Core.Tests
        run: dotnet test --collect:"XPlat Code Coverage"
      - name: Install SonarCloud scanner
        run: |
          dotnet tool update dotnet-sonarscanner --global
      - name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet-sonarscanner begin /k:"funkysi1701_Metrics" /o:"funkysi1701" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental Metrics.sln
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: CodeCov
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov
